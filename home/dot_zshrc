# Source zplug
source $HOME/.zplug/init.zsh

if command -v wpg &> /dev/null ; then
  (cat $HOME/.config/wpg/sequences &)
fi


# Some additional env variables needed for zsh plugins
ZSH_AUTOSUGGEST_STRATEGY=(match_prev_cmd completion history)
ZSH_AUTOSUGGEST_BUFFER_MAX_SIZE=20
ZSH_AUTOSUGGEST_USE_ASYNC=true

# Plugins
#zplug 'zplug/zplug', hook-build:'zplug --self-manage'
zplug "plugins/git",   from:oh-my-zsh
zplug "plugins/screen",   from:oh-my-zsh
zplug "plugins/aliases",   from:oh-my-zsh
zplug "plugins/colored-man-pages",   from:oh-my-zsh
zplug "plugins/docker",   from:oh-my-zsh
zplug "plugins/docker-compose",   from:oh-my-zsh
zplug "plugins/systemd",   from:oh-my-zsh
zplug "plugins/sudo",   from:oh-my-zsh
zplug "plugins/systemadmin",   from:oh-my-zsh
zplug "plugins/command-not-found",   from:oh-my-zsh
zplug "plugins/systemadmin",   from:oh-my-zsh
zplug "plugins/kubectl",   from:oh-my-zsh
zplug "plugins/terraform",   from:oh-my-zsh
zplug "zsh-users/zsh-autosuggestions"
zplug "greymd/tmux-xpanes"
zplug "zdharma-continuum/fast-syntax-highlighting", defer:2
zplug "peter-si/zsh-aliases", use:"aliases.plugin.zsh", depth:1
#zplug "ohmyzsh/ohmyzsh", use:"lib/*.zsh", depth:1
zplug "lib/cli",   from:oh-my-zsh
zplug "lib/compfix",   from:oh-my-zsh
zplug "lib/completion",   from:oh-my-zsh
zplug "lib/correction",   from:oh-my-zsh
zplug "lib/diagnostics",   from:oh-my-zsh
zplug "lib/directories",   from:oh-my-zsh
zplug "lib/functions",   from:oh-my-zsh
zplug "lib/grep",   from:oh-my-zsh
zplug "lib/git",   from:oh-my-zsh
zplug "lib/history",   from:oh-my-zsh
zplug "lib/key-bindings",   from:oh-my-zsh
zplug "lib/misc",   from:oh-my-zsh
zplug "lib/nvm",   from:oh-my-zsh
zplug "lib/prompt_info_functions",   from:oh-my-zsh
zplug "lib/spectrum",   from:oh-my-zsh
zplug "lib/termsupport",   from:oh-my-zsh
zplug "lib/theme-and-appearance",   from:oh-my-zsh
#zplug "lib/vcs_info",   from:oh-my-zsh





# Set up theme
zplug 'romkatv/powerlevel10k', as:theme, depth:1

# Install plugins if there are plugins that have not been installed
if ! zplug check --verbose; then
    printf "Install? [y/N]: "
    if read -q; then
        echo; zplug install
    fi
fi

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi


# Then, source plugins and add commands to $PATH
zplug load
#zplug load --verbose

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

eval "$(bw completion --shell zsh); compdef _bw bw;"
eval "$(fastly --completion-script-zsh)"

source ~/.zshrc-$(hostname) 2>/dev/null

#[[ "$STY" != "" ]] || screen -U -dR

if [[ -r "/opt/google-cloud-sdk/completion.zsh.inc" ]]; then
  source "/opt/google-cloud-sdk/completion.zsh.inc"
fi
